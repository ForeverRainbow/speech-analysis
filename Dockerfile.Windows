FROM ubuntu:latest AS build

# Install build tools.
RUN apt-get update && \
        apt-get install -yy \
            autoconf \
            automake \
            autopoint \
            bash \
            bison \
            bzip2 \
            flex \
            g++ \
            g++-multilib \
            gettext \
            git \
            gperf \
            intltool \
            libc6-dev-i386 \
            libgdk-pixbuf2.0-dev \
            libltdl-dev \
            libssl-dev \
            libtool-bin \
            libxml-parser-perl \
            lzip \
            make \
            openssl \
            p7zip-full \
            patch \
            perl \
            pkg-config \
            python \
            ruby \
            sed \
            unzip \
            wget \
            xz-utils

# Install mxe.
RUN git clone https://github.com/mxe/mxe.git /usr/mxe
RUN cd /usr/mxe && make JOBS=$(nproc) MXE_TARGETS='i686-w64-mingw32.static' MXE_PLUGIN_DIRS='plugins/gcc9' cc gcc
RUN cd /usr/mxe && make JOBS=$(nproc) MXE_TARGETS='i686-w64-mingw32.static' MXE_PLUGIN_DIRS='plugins/gcc9' qtbase

RUN wget https://gitlab.com/libeigen/eigen/-/archive/master/eigen-master.tar.bz2 && \
        tar -xvf eigen-master.tar.bz2 -C /usr && \
        cd /usr/mxe && make JOBS=$(nproc) MXE_TARGETS='i686-w64-mingw32.static' MXE_PLUGIN_DIRS='plugins/gcc9' eigen eigen_SOURCE_TREE=/usr/eigen-master

RUN wget http://www.portaudio.com/archives/pa_snapshot.tgz && \
        tar -xvf pa_snapshot.tgz -C /usr && \
        cd /usr/portaudio \
        mkdir -p build && \
        cd build && \
        export PATH=/usr/mxe/usr/bin:$PATH && \
        export CROSS=i686-w64-mingw32.static- && \
        ${CROSS}cmake -DCMAKE_INSTALL_PREFIX=/usr/mxe/usr/i686-w64-mingw32.static .. && \
        make -j$(nproc) && \
        make install

RUN wget http://www.fftw.org/fftw-3.3.8.tar.gz && \
        tar -xvf fftw-3.3.8.tar.gz -C /usr && \
        cd /usr/fftw-3.3.8 && \
        mkdir -p build && \
        cd build && \
        export PATH=/usr/mxe/usr/bin:$PATH && \
        export CROSS=i686-w64-mingw32.static- && \
        ${CROSS}cmake -DCMAKE_C_FLAGS="-DWITH_OUR_MALLOC=1" -DCMAKE_INSTALL_PREFIX=/usr/mxe/usr/i686-w64-mingw32.static -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTS=OFF -DENABLE_SSE=ON -DENABLE_SSE2=ON -DENABLE_AVX=ON -DENABLE_AVX2=ON .. && \
        make -j$(nproc) && \
        make install

# Copy working directory to compile.
COPY . /usr/src

RUN cd /usr/src && \
        mkdir -p build && \
        cd build && \
        export PATH=/usr/mxe/usr/bin:$PATH && \
        export CROSS=i686-w64-mingw32.static- && \
        ${CROSS}cmake --config Release .. && \
        make -j$(nproc) && \
        cp /usr/src/build/speech_analysis/src/main-build/speech_analysis.exe /out
